package fantasybit;

enum MyNameStatus 
{
    none=1;
    notavil=2;
    requested=5;
    found=10;
    transaction_sent=15;
    confirmed=20;
}

message MyFantasyName
{
    required string name=1;
    required MyNameStatus status=2;
    optional NameTransaction nametransaction=3;
}

message Secret
{
    required string private_key = 1;
    optional MyFantasyName myfantasyname=2;
}

message FantasyNameT 
{
    required string public_key=1;
    required string hash=2;
    required BitStake balances=3;
    optional string name=4;
}

message BitStake 
{
}

message NameTransaction
{
	required uint64 hash=1;
	required bytes public_key=2;
	required uint32 nonce=3;
	required uint32 utc_sec=4;
	required string prev_id=5; 
	optional bytes sig=6;
}

message OutData {
	enum Type { MYFANTASYNAME = 1; SNAPSHOT = 2; HEARTBEAT=3; }
	required Type type = 1;

	optional MyFantasyName myfantasyname = 2;	
  	extensions 100 to max;
}

// Elsewhere...
//extend OutData {
//	optional int32 test = 100;	
//}

message InData {
	enum Type { MINENAME = 1; QUIT=2; HEARTBEAT=3;CONNECT=4;}
	required Type type = 1;
	
	optional string data = 2;	
  	extensions 100 to max;
}

// Elsewhere...
//extend InData {
//	optional int32 test = 100;	
//}
